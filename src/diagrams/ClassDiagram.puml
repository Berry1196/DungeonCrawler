@startuml

Main o-- Game
Class Main

Class Game {
+startGame()
}

storyMap o-- Player
Class Player {
+ String name = scanner.nextLine
+ chooseClass()
}


Player o-- Type
Interface Type {
+ int HP
+ int attack
+ int defense
+ int gold
+setHP()
+getHP()
+setAttack()
+getAttack()
+setDefense()
+getDefense()
+setGold()
+getGold()
}
Type o-- Barbarian
 abstract Class Barbarian {
String className

}

Type o-- Warrior
 abstract Class Warrior {
String className
}

Type o-- Tank
 abstract Class Tank {
String className
}

storyMap o-- Interactions
Class Interactions {
+treasureChest()
+trap()
'riddles()
}

storyMap o-- Riddles
Class Riddles {
+rOne
+rTwo
+rThree
}


storyMap o-- Monsters
interface Monsters {
+getMonsterHP()
+setMonsterHP()
+getMonsterAttack()
+setMonsterAttack()
+getMonsterDefense()
+setMonsterDefense()
}
Class AMonster implements Monsters{

}
 AMonster <|-- Skeleton
abstract Class Skeleton {
+int monsterHP
+int monsterAttack
+int monsterDefense
}
AMonster <|-- Minotaur
 abstract class Minotaur {
+int monsterHP
+int monsterAttack
+int monsterDefense
}
AMonster <|-- Dragon
 abstract Class Dragon {
+int monsterHP
+int monsterAttack
+int monsterDefense
}

Game o-- storyMap
Class storyMap {
+mapOne()
}




@enduml

}